---
title: "OPC Farallons End Products"
format: gfm
execute:
  echo: false
  output: asis
editor: visual
---

```{r}
#| output: false

library(tidyverse)

# Final output should look like:
# <details>
#   <summary>2023</summary>
#   <details>
#     <summary>03</summary>
#     [anchovy_2023-03-01.grd](anchovy_2023-03-01.grd)
#     [anchovy_2023-03-01.gri](anchovy_2023-03-01.gri)
#     ...
#     [anchovy_2023-03-31.grd](anchovy_2023-03-31.grd)
#     [anchovy_2023-03-31.gri](anchovy_2023-03-31.gri)
#     ...
#     [bluewhale_2023-03-01.grd](bluewhale_2023-03-01.grd)
#     [bluewhale_2023-03-01.gri](bluewhale_2023-03-01.gri)
#     ...
#     [humpback_2023-03-31.grd](humpback_2023-03-31.grd)
#     [humpback_2023-03-31.gri](humpback_2023-03-31.gri)
#   </details>
#   ...
#   <details>
#     <summary>12</summary>
#     [anchovy_2023-12-01.grd](anchovy_2023-12-01.grd)
#     ...
#     [humpback_2023-12-31.gri](humpback_2023-12-31.gri)
#   </details>
# </details>
# ...

# Generate Markdown output for a given year
print_year <- function(year, rows) {
  months <- rows %>% 
    nest(.by = month) %>% 
    mutate(markdown = map2_chr(month, data, print_month)) %>% 
    pull(markdown) %>% 
    paste0(collapse = "\n")
  str_glue("
  <details>
    <summary>{year}</summary>
    {months}
  </details>
  ")
}

# Generate Markdown output for a given month
print_month <- function(month, rows) {
  links <- str_glue("[{basename(rows$file_path)}]({rows$file_path})") %>% 
    paste0(collapse = "\n\n")
  str_glue("
  <details>
    <summary>{month}</summary>
    {links}
  </details>
  ")
}

print_file_type <- function(dirname, file_pattern, path_components) {
  file_paths <- dir(dirname, pattern = file_pattern) 
  file_paths %>% 
    str_split("[_-]") %>% 
    map(path_components) %>% 
    list_rbind() %>% 
    mutate(file_path = file.path(dirname, file_paths)) %>% 
    nest(.by = year) %>% 
    mutate(markdown = map2_chr(year, data, print_year)) %>% 
    pull(markdown) %>% 
    paste0(collapse = "\n") %>% 
    cat()
}

```

## Daily rasters

```{r}
raster_components <- function(x) {
  tibble(species = x[1],
         year = x[2],
         month = x[3],
         day = str_sub(x[4], 1, 2),
         extension = str_sub(x[4], 3))
}
print_file_type("rasters", ".*.gr[di]", raster_components)

```

## Daily maps

```{r}
map_components <- function(x) {
  tibble(species = x[1],
         year = x[2],
         month = x[3],
         day = str_sub(x[4], 1, 2),
         extension = str_sub(x[4], 3))
}
print_file_type("maps", ".*.png", map_components)

```

## Daily EPAC metadata

```{r}
metadata_components <- function(x) {
  tibble(year = x[2],
         month = x[3],
         day = str_sub(x[4], 1, 2),
         extension = str_sub(x[4], 3))
}
print_file_type("epac_metadata", ".*csv", metadata_components)

```

## Two week rasters

```{r}
raster_components <- function(x) {
  tibble(species = x[1],
         year = str_sub(x[2], 6),
         month = x[3],
         day = x[4],
         extension = str_sub(x[7], 2))
}
print_file_type("two_week_rasters", ".*.gr[di]", raster_components)

```

## Two week maps

```{r}
map_components <- function(x) {
  tibble(species = x[1],
         year = str_sub(x[2], 6),
         month = x[3],
         day = x[4],
         extension = str_sub(x[7], 2))
}
print_file_type("two_week_maps", ".*.png", map_components)

```

## Two week metadata

```{r}
metadata_components <- function(x) {
  tibble(species = x[1],
         year = x[3],
         month = x[4],
         day = str_sub(x[5], 1, 2),
         extension = str_sub(x[5], 2))
}
print_file_type("two_week_metadata", ".*.csv", metadata_components)

```
